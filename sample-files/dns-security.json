[
  {
    "id": 1,
    "title": "DNS Cache Poisoning",
    "question": "Wat is het hoofddoel van DNS cache poisoning (ook bekend als DNS spoofing)?",
    "options": [
      "A) Het verhogen van DNS query snelheid",
      "B) Het omzeilen van DNS rate limiting",
      "C) Het omleiden van legitiem verkeer naar kwaadaardige websites",
      "D) Het versleutelen van DNS verkeer"
    ],
    "correct_answer": "C",
    "explanation": "DNS cache poisoning, ook wel DNS spoofing genoemd, is een van de meest voorkomende en gevaarlijke DNS-aanvallen. Het hoofddoel van deze aanval is **het omleiden van legitiem verkeer naar kwaadaardige websites** door valse DNS-informatie in de cache van een DNS-resolver in te voegen.\n\n**Hoe DNS cache poisoning werkt:**\n\n1. **Doelwitstelling**: Aanvallers identificeren een DNS-resolver die ze willen compromitteren\n2. **Valse responsen**: Ze sturen nep-DNS-responsen naar de resolver voordat de legitieme respons arriveert\n3. **Cache vervuiling**: De resolver slaat de valse informatie op in zijn cache\n4. **Traffic omleiding**: Alle toekomstige queries voor dat domein worden omgeleid naar de kwaadaardige server\n\n**Praktische gevolgen:**\n\n- **Phishing aanvallen**: Gebruikers worden omgeleid naar namaakwebsites die eruit zien als legitieme sites om inloggegevens te stelen\n- **Malware distributie**: Bezoekers krijgen malware geïnjecteerd via gecompromitteerde websites\n- **Man-in-the-middle aanvallen**: Aanvallers kunnen al het verkeer tussen gebruiker en website onderscheppen\n\n**Verdedigingsmaatregelen:**\n\n- **DNSSEC implementeren**: Dit voegt digitale handtekeningen toe aan DNS-records om authenticiteit te garanderen\n- **DNS cache locking**: Voorkomt dat gecachte data wordt gewijzigd voordat de TTL verloopt\n- **Monitoring**: Regelmatige controle op ongebruikelijke DNS-patronen en responsen"
  },
  {
    "id": 2,
    "title": "DNS Veiligheid",
    "question": "Welke veiligheidsmaatregel is specifiek ontworpen om DNS-antwoorden te authenticeren en data-integriteit te garanderen?",
    "options": [
      "A) HTTPS",
      "B) DNSSEC",
      "C) TLS",
      "D) VPN"
    ],
    "correct_answer": "B",
    "explanation": "**DNSSEC (Domain Name System Security Extensions)** is de specifiek voor DNS ontworpen beveiligingsmaatregel die data-integriteit en authenticatie van DNS-antwoorden garandeert. DNSSEC werd ontwikkeld om de fundamentele beveiligingsproblemen van het originele DNS-protocol aan te pakken.\n\n**Hoe DNSSEC werkt:**\n\n1. **Digitale handtekeningen**: Elke DNS-record wordt voorzien van een digitale handtekening (RRSIG record)\n2. **Cryptografische sleutels**: Publieke sleutels (DNSKEY records) worden gebruikt om handtekeningen te verifiëren\n3. **Chain of trust**: Een hiërarchische vertrouwensketen loopt van de root zone naar individuele domeinen\n4. **Validatie**: DNS-resolvers kunnen de authenticiteit van elke respons verifiëren\n\n**Waarom DNSSEC cruciaal is:**\n\n- **Voorkomt cache poisoning**: Valse DNS-records kunnen niet worden geïnjecteerd omdat ze geen geldige handtekening hebben\n- **Data integriteit**: Garandeert dat DNS-data niet is gemanipuleerd tijdens transport\n- **Authenticatie**: Bevestigt dat DNS-antwoorden afkomstig zijn van de geautoriseerde bron\n\n**Waarom de andere opties fout zijn:**\n\n- **HTTPS**: Versleutelt web verkeer maar heeft geen directe relatie met DNS-authenticatie\n- **TLS**: Versleutelt transportlagen maar is niet specifiek voor DNS (hoewel DNS over TLS bestaat)\n- **VPN**: Creëert een veilige tunnel maar authenticeert geen DNS-data"
  },
  {
    "id": 3,
    "title": "DNS Amplification Attacks",
    "question": "Wat is een DNS amplification attack?",
    "options": [
      "A) Een fysieke aanval op DNS servers",
      "B) Een DDoS aanval die DNS servers gebruikt voor vermenigvuldigen van het hoeveelheid netwerkverkeer",
      "C) Een aanval die DNS configuraties wijzigt",
      "D) Een aanval op DNS zone files"
    ],
    "correct_answer": "B",
    "explanation": "Een **DNS amplification attack** is een sophisticated vorm van Distributed Denial of Service (DDoS) aanval waarbij aanvallers DNS servers misbruiken om massale hoeveelheden verkeer naar een doelwit te sturen. Deze aanval exploiteert het asymmetrische karakter van DNS-communicatie waar een kleine query een veel grotere respons kan genereren.\n\n**Hoe DNS amplification werkt:**\n\n1. **Query spoofing**: Aanvallers sturen kleine DNS-queries naar open DNS-resolvers met het IP-adres van het doelwit als bron\n2. **Amplificatie effect**: De DNS-server stuurt een veel grotere respons naar het doelwit (amplificatie factor kan 28-179x zijn)\n3. **Botnet deployment**: Duizenden gecompromitteerde systemen voeren gelijktijdig deze queries uit\n4. **Doelwit overspoeling**: Het doelwit wordt overspoeld met ongewenst DNS-verkeer\n\n**Waarom dit zo effectief is:**\n\n- **Asymmetrie**: Een 60-byte query kan een 4000-byte respons genereren\n- **Legitimiteit**: DNS-verkeer wordt zelden geblokkeerd door firewalls\n- **Schaal**: Miljoenen open DNS-resolvers kunnen worden misbruikt\n- **Verberging**: Het echte IP-adres van de aanvaller blijft verborgen\n\n**Verdedigingsmaatregelen:**\n\n1. **Traffic monitoring**: Ongebruikelijke spikes in uitgaand DNS-verkeer\n2. **Rate limiting**: Beperking van queries per seconde per bron\n3. **Response rate limiting (RRL)**: Beperkt antwoorden naar verdachte bronnen\n4. **BCP38 implementatie**: Internet Service Providers blokkeren gespoofde verkeer"
  },
  {
    "id": 4,
    "title": "DNS over HTTPS (DoH)",
    "question": "Welke standaard poort gebruikt DNS over HTTPS (DoH)?",
    "options": [
      "A) Poort 53",
      "B) Poort 80",
      "C) Poort 443",
      "D) Poort 8080"
    ],
    "correct_answer": "C",
    "explanation": "**DNS over HTTPS (DoH)** gebruikt **poort 443**, dezelfde poort als standaard HTTPS verkeer. Dit is een fundamenteel aspect van DoH dat het onderscheidt van traditionele DNS en zelfs van DNS over TLS (DoT).\n\n**Waarom poort 443:**\n\n- **Camouflage**: DoH-verkeer is onzichtbaar tussen regulier HTTPS-verkeer\n- **Firewall bypass**: Poort 443 wordt vrijwel nooit geblokkeerd door firewalls\n- **Standaardisatie**: Maakt gebruik van bestaande HTTPS-infrastructuur\n\n**DoH vs andere DNS implementaties:**\n\n- **Traditionele DNS**: Gebruikt poort 53 (UDP/TCP) - onversleuteld\n- **DNS over TLS (DoT)**: Gebruikt poort 853 - versleuteld maar zichtbaar\n- **DNS over HTTPS (DoH)**: Gebruikt poort 443 - versleuteld en verborgen\n\n**Hoe DoH werkt:**\n\n1. **HTTPS wrapper**: DNS-queries worden verpakt in HTTPS-requests\n2. **HTTP/2 protocol**: Vaak gebruikt voor efficiënte communicatie\n3. **GET/POST methods**: DNS-data wordt gecodeerd in HTTP-berichten\n4. **TLS encryption**: Volledige versleuteling van DNS-communicatie\n\n**Voordelen van DoH:**\n\n- **Privacy bescherming**: ISP's kunnen DNS-queries niet meer onderscheppen\n- **Censorship resistance**: Moeilijker te blokkeren door autoritaire regimes\n- **Man-in-the-middle prevention**: TLS-versleuteling voorkomt tampering"
  },
  {
    "id": 5,
    "title": "DNS Tunneling",
    "question": "Wat is de primaire reden waarom DNS tunneling een beveiligingsrisico vormt?",
    "options": [
      "A) Het vertraagt DNS queries",
      "B) Het maakt DNS queries onleesbaar",
      "C) Het staat aanvallers toe data te exfiltreren via DNS queries",
      "D) Het gebruikt teveel bandbreedte"
    ],
    "correct_answer": "C",
    "explanation": "**DNS tunneling** vormt een significant beveiligingsrisico omdat **het aanvallers toestaat om data te exfiltreren via DNS queries**, waarbij ze de DNS-infrastructuur misbruiken als een verborgen communicatiekanaal. Deze techniek exploiteert het feit dat DNS-verkeer vrijwel altijd wordt toegestaan door firewalls en security systemen.\n\n**Hoe DNS tunneling werkt:**\n\n1. **Data encoding**: Gevoelige data wordt gecodeerd in DNS-queries of -responses\n2. **Subdomain misbruik**: Data wordt verborgen in lange subdomain namen\n3. **TXT record abuse**: Grote hoeveelheden data kunnen worden verborgen in TXT records\n4. **Bidirectional communication**: Zowel data exfiltratie als command & control communicatie\n\n**Waarom DNS tunneling zo gevaarlijk is:**\n\n- **Firewall bypass**: DNS-verkeer wordt zelden geblokkeerd of geïnspecteerd\n- **Stealth communication**: Verbergt kwaadaardige activiteit in legitiem uitziend verkeer\n- **Detection evasion**: Moeilijk te onderscheiden van normale DNS-activiteit\n- **Persistent access**: Kan langdurige backdoors creëren\n\n**Praktische toepassingen door aanvallers:**\n\n1. **Data exfiltratie**: Stelen van gevoelige bestanden via DNS queries\n2. **Command & Control**: Remote besturing van geïnfecteerde systemen\n3. **Malware communication**: Communicatie tussen malware en C2-servers\n4. **Persistence mechanism**: Onderhouden van toegang na initiële compromittatie\n\n**Detectie strategieën:**\n\n- **DNS monitoring**: Real-time analyse van DNS-verkeer\n- **Deep packet inspection**: Gedetailleerde inspectie van DNS-payloads\n- **Behavioral analysis**: Machine learning voor anomalie detectie\n- **DNS filtering**: Blokkeren van verdachte domains"
  },
  {
    "id": 6,
    "title": "DNS Record Types voor Security",
    "question": "Welke van de volgende DNS record types wordt voornamelijk gebruikt voor e-mail authenticatie en anti-spam doeleinden?",
    "options": [
      "A) A record",
      "B) CNAME record",
      "C) TXT record",
      "D) MX record"
    ],
    "correct_answer": "C",
    "explanation": "**TXT records** worden voornamelijk gebruikt voor e-mail authenticatie en anti-spam doeleinden. Hoewel TXT records oorspronkelijk bedoeld waren voor het opslaan van willekeurige tekstinformatie, zijn ze geëvolueerd tot een cruciaal onderdeel van e-mail security en domain verificatie.\n\n**E-mail authenticatie met TXT records:**\n\n**1. SPF (Sender Policy Framework)**\n\n`example.com. TXT \"v=spf1 include:_spf.google.com ~all\"\n`\n- **Functie**: Specificeert welke servers geautoriseerd zijn om e-mail te verzenden namens het domein\n- **Anti-spoofing**: Voorkomt dat aanvallers e-mails verzenden alsof ze van jouw domein komen\n- **Mechanisme**: Ontvangende servers controleren of de verzendende server geautoriseerd is\n\n**2. DKIM (DomainKeys Identified Mail)**\n\n`selector._domainkey.example.com. TXT \"v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3...\"\n`\n- **Digitale handtekening**: Voegt cryptografische handtekening toe aan e-mails\n- **Message integrity**: Garandeert dat e-mail content niet is gewijzigd\n- **Reputation binding**: Koppelt e-mail aan het verzendende domein\n\n**3. DMARC (Domain-based Message Authentication)**\n\n`_dmarc.example.com. TXT \"v=DMARC1; p=quarantine; rua=mailto:dmarc@example.com\"\n`\n- **Policy enforcement**: Defineert wat te doen met e-mails die SPF/DKIM falen\n- **Reporting**: Verzamelt feedback over e-mail authenticatie resultaten\n- **Phishing protection**: Voorkomt misbruik van domein voor phishing\n\n**Andere security toepassingen van TXT records:**\n\n**Domain verificatie:**\n\n- **Google Site Verification**: `google-site-verification=abcd1234...`\n- **Microsoft 365**: `MS=ms12345678`\n- **SSL certificaat validatie**: Voor Let's Encrypt en andere CA's\n\n**Waarom TXT records ideaal zijn voor security:**\n\n1. **Flexibiliteit**: Kunnen willekeurige data bevatten\n2. **Standaardisatie**: Breed ondersteund door alle DNS-implementaties\n3. **Parsing**: Eenvoudig te interpreteren door applicaties\n4. **Updates**: Makkelijk te wijzigen zonder DNS-infrastructuur aanpassingen\n\n**Waarom de andere opties minder geschikt zijn:**\n\n- **A record**: Wijst naar IP-adressen, niet geschikt voor tekstuele authenticatie data\n- **CNAME record**: Creëert aliassen, geen authenticatie functionaliteit\n- **MX record**: Specificeert mail servers maar bevat geen authenticatie informatie"
  },
  {
    "id": 7,
    "title": "DNS Architecture Security",
    "question": "Wat is het belangrijkste voordeel van het scheiden van authoritative en recursive DNS servers?",
    "options": [
      "A) Betere prestaties",
      "B) Lagere kosten",
      "C) Verkleinen van attack surface",
      "D) Eenvoudigere configuratie"
    ],
    "correct_answer": "C",
    "explanation": "Het **verkleinen van de attack surface** is het belangrijkste beveiligingsvoordeel van het scheiden van authoritative en recursive DNS servers. Deze architecturale best practice is fundamenteel voor een robuuste DNS security strategie.\n\n**Waarom scheiding essentieel is:**\n\n**Authoritative servers:**\n\n- **Functie**: Bevatten de definitieve DNS-records voor specifieke zones\n- **Verantwoordelijkheid**: Beantwoorden alleen queries voor domeinen waarvoor ze autoritair zijn\n- **Exposure**: Hebben beperkte functionaliteit en zijn daarom moeilijker aan te vallen\n\n**Recursive servers:**\n\n- **Functie**: Lossen DNS-queries op namens clients door andere DNS-servers te bevragen\n- **Verantwoordelijkheid**: Cachen resultaten en bedienen interne gebruikers\n- **Complexity**: Complexere functionaliteit creëert meer potentiële kwetsbaarheden\n\n**Attack surface reductie:**\n\n**1. Beperkte functionaliteit per server:**\n\n- Authoritative servers hoeven geen recursie uit te voeren\n- Recursive servers hoeven geen autoritaire data te bevatten\n- Elke server heeft specifieke, beperkte verantwoordelijkheden\n\n**2. Verschillende beveiligingspolicies:**\n\n- **Authoritative servers**: Kunnen strikt worden geconfigureerd om alleen geautoriseerde queries te beantwoorden\n- **Recursive servers**: Kunnen worden geconfigureerd met toegangscontroles voor interne clients\n\n**3. Geïsoleerde failure modes:**\n\n- Compromittatie van een recursive server beïnvloedt niet de autoritaire data\n- Aanvallen op authoritative servers beïnvloeden niet de interne DNS-resolutie\n\n**Specifieke beveiligingsvoordelen:**\n\n**Tegen DNS poisoning:**\n\n- Authoritative servers kunnen niet worden gebruikt voor cache poisoning omdat ze geen cache hebben\n- Recursive servers kunnen worden beschermd met specifieke anti-poisoning maatregelen\n\n**Tegen DDoS aanvallen:**\n\n- Aanvallen op authoritative servers beïnvloeden niet interne DNS-resolutie\n- Recursive servers kunnen worden beschermd achter firewalls\n\n**NIST 800-53 compliance:**\nDeze scheiding wordt specifiek vereist door meerdere NIST controls:\n\n- **SC-20**: Secure Name/Address Resolution Service\n- **SC-21**: Secure Name/Address Resolution Service (Recursive/Caching)\n- **SI-4**: Information System Monitoring\n\n**Waarom de andere opties minder belangrijk zijn:**\n\n- **Prestaties**: Hoewel scheiding prestaties kan verbeteren, is dit niet het primaire security doel\n- **Kosten**: Security is belangrijker dan kostenbesparingen\n- **Configuratie**: Scheiding maakt configuratie complexer, niet eenvoudiger"
  },
  {
    "id": 8,
    "title": "DNS Reconnaissance",
    "question": "Welke techniek wordt gebruikt tijdens penetration testing om subdomains van een target domain te ontdekken?",
    "options": [
      "A) Port scanning",
      "B) DNS enumeration",
      "C) Social engineering",
      "D) Brute force attacks"
    ],
    "correct_answer": "B",
    "explanation": "**DNS enumeration** is de primaire techniek die wordt gebruikt tijdens penetration testing om subdomains van een target domain te ontdekken. Deze reconnaissance techniek is een fundamenteel onderdeel van de information gathering fase van een penetratie test.\n\n**Wat is DNS enumeration:**\nDNS enumeration is het systematisch verzamelen van DNS-gerelateerde informatie over een doeldomein, inclusief:\n\n- Subdomains en hostnames\n- IP-adressen en netwerkranges\n- DNS-records (A, MX, NS, TXT, etc.)\n- Mail servers en nameservers\n\n**Subdomain discovery technieken:**\n\n**1. Passive enumeration:**\n\n- **Certificate transparency logs**: Zoeken naar SSL-certificaten\n- **Search engine dorking**: Google, Bing queries voor subdomains\n- **DNS databases**: Gebruik van historische DNS-data\n- **OSINT platforms**: SecurityTrails, VirusTotal, Shodan\n\n**2. Active enumeration:**\n\n- **Brute force**: Woordenlijsten gebruiken om subdomains te raden\n- **Zone transfers**: Proberen AXFR requests uit te voeren\n- **DNS walking**: Systematisch doorlopen van DNS-zones\n- **Reverse DNS**: IP-ranges scannen voor PTR records\n\n**Populaire DNS enumeration tools:**\n\n**Command-line tools:**\n\n- **dig**: Basis DNS-queries uitvoeren\n- **nslookup**: DNS-records opvragen\n- **host**: Simpele DNS-lookups\n- **dnsrecon**: Uitgebreide DNS-reconnaissance\n\n**Gespecialiseerde tools:**\n\n- **Sublist3r**: Automatische subdomain discovery\n- **Amass**: Uitgebreide subdomain enumeration\n- **Subfinder**: Snelle subdomain scanner\n- **Fierce**: DNS-reconnaissance tool\n- **DNSenum**: Comprehensive DNS enumeration\n\n**Waarom subdomain discovery belangrijk is:**\n\n1. **Attack surface expansion**: Meer potentiële entry points\n2. **Hidden services**: Development/staging environments\n3. **Forgotten assets**: Oude of onbeheerde subdomains\n4. **Vulnerable applications**: Outdated software op subdomains\n\n**Waarom de andere opties minder accuraat zijn:**\n\n- **Port scanning**: Ontdekt open poorten maar niet specifiek subdomains\n- **Social engineering**: Kan informatie opleveren maar is niet de primaire methode\n- **Brute force attacks**: Is een techniek binnen DNS enumeration, niet de overkoepelende methode"
  },
  {
    "id": 9,
    "title": "DNS Security Incident Response",
    "question": "Wat is de aanbevolen actie bij het detecteren van ongebruikelijke DNS query patronen die wijzen op mogelijke DNS tunneling?",
    "options": [
      "A) Negeren van de activiteit",
      "B) Direct alle DNS verkeer blokkeren",
      "C) Gedetailleerde analyse van de queries uitvoeren",
      "D) De DNS server herstarten"
    ],
    "correct_answer": "C",
    "explanation": "**Gedetailleerde analyse van de queries uitvoeren** is de aanbevolen eerste actie bij detectie van mogelijke DNS tunneling. DNS tunneling is een sophisticated aanvalstechniek die zorgvuldige analyse vereist om false positives te vermijden en de werkelijke omvang van de bedreiging te begrijpen.\n\n**Waarom gedetailleerde analyse cruciaal is:**\n\n**1. False positive reductie:**\n\n- Legitieme applicaties kunnen ongebruikelijke DNS-patronen vertonen\n- Automatische updates, CDN's en cloud services genereren veel DNS-verkeer\n- Overhaaste reacties kunnen legitieme services verstoren\n\n**2. Threat intelligence gathering:**\n\n- Identificatie van aanvalspatronen en IOC's\n- Bepaling van de scope en impact van de aanval\n- Verzameling van forensische gegevens voor verdere actie\n\n**DNS tunneling analyse framework:**\n\n**Stap 1: Query pattern analysis**\n\n`- Query frequentie: Abnormaal hoge DNS-activiteit van specifieke hosts\n- Query length: Ongebruikelijk lange subdomain namen (>50 karakters)\n- Query entropy: Hoge randomness in query content\n- Query timing: Regelmatige intervals of burst patronen\n`\n**Stap 2: Content inspection**\n\n`- Encoded data detection: Base64, hex, of andere encoding schemes\n- Payload analysis: Data verborgen in subdomain labels\n- Response analysis: Ongebruikelijke TXT record content\n- Protocol analysis: Non-standard DNS record types\n`\n**Stap 3: Network correlation**\n\n`- Source identification: Welke hosts genereren verdacht verkeer\n- Destination analysis: Naar welke domains worden queries gestuurd\n- Timeline reconstruction: Wanneer begon de activiteit\n- Volume assessment: Hoeveel data wordt mogelijk geëxfiltreerd\n`\n**Immediate containment actions (na analyse):**\n\n**Als DNS tunneling wordt bevestigd:**\n\n1. **Isolated containment**: Beperking van verdachte hosts zonder volledig blokkeren\n2. **Traffic redirection**: Omleiding van queries naar sinkhole\n3. **Enhanced monitoring**: Verhoogde logging van DNS-activiteit\n4. **Stakeholder notification**: Informatie aan relevant personeel\n\n**Waarom de andere opties problematisch zijn:**\n\n**Optie A (Negeren):**\n\n- DNS tunneling kan leiden tot significante data exfiltratie\n- Aanvallers krijgen de kans om hun positie te versterken\n- Mogelijke compliance schendingen\n\n**Optie B (Volledig blokkeren):**\n\n- Kan legitieme services verstoren\n- Voorkomt verdere analyse en threat intelligence gathering\n- Mogelijk disproportionele response\n\n**Optie D (Server restart):**\n\n- Lost belangrijke forensische gegevens\n- Verstoort alle DNS-services\n- Adresseert niet de onderliggende bedreiging"
  },
  {
    "id": 10,
    "title": "DNS Security Compliance",
    "question": "Welke compliance framework bevat specifieke vereisten voor DNS monitoring en logging?",
    "options": [
      "A) GDPR",
      "B) ISO 27001",
      "C) PCI DSS",
      "D) HIPAA"
    ],
    "correct_answer": "C",
    "explanation": "**PCI DSS (Payment Card Industry Data Security Standard)** bevat specifieke en expliciete vereisten voor DNS monitoring en logging. PCI DSS 4.0, de meest recente versie, heeft DNS security als een prominente component van de compliance vereisten geïntroduceerd.\n\n**Specifieke PCI DSS DNS vereisten:**\n\n**Requirement 10 - Logging en monitoring:**\nPCI DSS benadrukt dat DNS-queries en -responses een belangrijke databron zijn voor netwerkdefenders ter ondersteuning van incident response en intrusion discovery.\n\n**Requirement 11.5.1.1 (Service Providers):**\n\"Additional requirement for service providers only: Intrusion-detection and/or intrusion-prevention techniques detect, alert on/prevent, and address covert channels\"\n\nPCI SSC guidance specificeert dat DNS-queries en -responses essentiële data zijn voor:\n\n- **Incident response**: Forensische analyse van security incidenten\n- **Intrusion discovery**: Detectie van ongeautoriseerde toegang\n- **Network defense**: Proactieve bedreiging detectie\n\n**Waarom PCI DSS DNS monitoring benadrukt:**\n\n**1. Payment data protection:**\n\n- DNS kan worden misbruikt voor credit card data exfiltratie\n- DNS tunneling kan payment processing systemen compromitteren\n- DNS spoofing kan leiden tot frauduleuze transactions\n\n**2. Network visibility:**\n\n- DNS-verkeer biedt inzicht in alle netwerkactiviteit\n- Critical voor detectie van payment data breaches\n- Essential for forensic investigations\n\n**Praktische PCI DSS DNS implementatie:**\n\n**Logging requirements:**\n\n`- Alle DNS queries en responses loggen\n- Timestamp en source IP tracking\n- Query type en response analysis\n- Anomaly detection en alerting\n`\n**Monitoring controls:**\n\n`- Real-time DNS traffic analysis\n- Automated alerting voor abnormal patterns\n- Integration met SIEM systems\n- Regular log review en analysis\n`\n**Waarom andere frameworks minder specifiek zijn:**\n\n**GDPR (Optie A):**\n\n- Focust op privacy en data protection\n- Geen specifieke technische DNS vereisten\n- Wel relevant voor DNS data retention policies\n\n**ISO 27001 (Optie B):**\n\n- Breed information security management framework\n- Bevat algemene monitoring vereisten\n- Geen specifieke DNS monitoring mandates\n\n**HIPAA (Optie D):**\n\n- Healthcare-specific privacy en security\n- Algemene security controls maar geen DNS specifics\n- Technical safeguards zijn breed gedefinieerd"
  }
]
